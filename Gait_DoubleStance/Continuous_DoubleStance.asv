function output = Continuous_DoubleStance(input)

%Define Parameters
P_dyn = input.auxdata.dynamics;  
P_cost = input.auxdata.cost;

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%              PHASE 1  --  D  --  Double Stance                          %
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%

stateDat = input.phase(1).state; 
actDat = input.phase(1).control;
phaseDat = input.auxdata.state;
phaseDat.phase = 'D';
phaseDat.mode = 'gpops_to_dynamics';
[States, Actuators] = DataRestructure(stateDat,actDat,phaseDat);

[dStates, contactForces] = dynamics_doubleStance(States, Actuators ,P_dyn);

Kinematics = kinematics(States);

contacts = convert(contactForces);  %Make into a struct
pathCst.footOneContactAngle = atan2(contacts.H1, contacts.V1);
pathCst.footTwoContactAngle = atan2(contacts.H2, contacts.V2);
pathCst.legOneLength = Kinematics.L1;
pathCst.legTwoLength = Kinematics.L2;

dS = convert(dStates);

dynS = zeros(length(S.x0),4);
dynS(:,1) = dS.x0;
dynS(:,2) = dS.y0;
dynS(:,3) = dS.dx0;
dynS(:,4) = dS.dy0;

output(1).dynamics = dynS;
output(1).path = packConstraints(pathCst,Phase);
output(1).integrand = costFunction(States, Actuators, Phase, P_cost); 

end